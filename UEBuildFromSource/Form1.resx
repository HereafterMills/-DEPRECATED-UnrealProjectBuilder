<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="folderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>157, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qUTaJ4m0n1mFzrzdHowft0nQ1ptKpH2SSPuZVejM2+3B749drN5J56gpuiPfoHq/7twO1XO68+3xu3ZJ
        h9U76Rw1RXfkG1Tv153boXpOd749ftcu6bB6J52jpuiOfIPq/bpzO1TP6c63x+/aJR1W76Rz1BTdkW9Q
        vV93bofqOd359vg9v0Qb6VBTdOdbbzMJ2nojibQ/daptVSLtxe8PRxvpUFN051tvMwnaeiOJtD91qm1V
        Iu3F7w9HG+lQU3TnW28zCdp6I4m0P3WqbVUi7cXvD0cb6VSbS6T9r1SoreJ3znSq7cHvD0cb6VSbS6T9
        r1SoreJ3znSq7cHvD0cb6VSbS6T9r1SoreJ3znSq7cHvD0cb6VSbS6T9r1SoreJ3znSq7cHvD0cb6VTb
        Dom0n6mk3pWgrbeqDjXl6LVLSKfadkik/Uwl9a4Ebb1VdagpR69dQjrVtkMi7WcqqXclaOutqkNNOXpt
        2IHuXG270bd2ved3qjugO72pxNFrww5052rbjb616z2/U90B3elNJY5eG3agO1fbbvStXe/5neoO6E5v
        KnH02rAD3bnadqNv7XrP71R3QHd6U4mj50O7dHY3/e6+QXpnqFAjVs85fg8YP27T2d30u/sG6Z2hQo1Y
        Pef4PWD8uE1ndxvvJN8gvTNUqBGr5xy/J/vPv/8BNZ0um7A19vMAAAAASUVORK5CYII=
</value>
  </data>
</root>